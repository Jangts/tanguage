@module;
/*!
 * tanguage framework source code
 *
 * class .Component
 *
 * Date 2017-04-06
 */


use $ obj/;
use $ str/hash;

namespace data;

var _ = pandora,
doc = root.document,
{console, location, localStorage} = root;

var database = {};

class .Storage {
    _init(name) {
        if (name && (typeof name === 'string')) {
            this.id = _.str.hash.md5.pseudoIdentity(name);
        } else {
            this.id = new _.Identifier(name, 1).toString();
        }
        try {
            database[this.id] = root.JSON.parse(localStorage[this.id]);
            this.length = _.obj.length(database[this.id], true);
        } catch (e) {
            database[this.id] = {};
            localStorage[this.id] = '{}';
            this.length = 0;
        }
        // console.log(name, data);
        return this;
    }
    
    set(key, value) {
        if (key && typeof key === 'string') {
            if (value === undefined) {
                if (database[this.id].hasOwnProperty(key)) {
                    delete database[this.id][key];
                    localStorage[this.id] = root.JSON.stringify(database[this.id]);
                    this.length = _.obj.length(database[this.id], true);
                }
            } else {
                database[this.id][key] = value;
                localStorage[this.id] = root.JSON.stringify(database[this.id]);
                this.length = _.obj.length(database[this.id], true);
            }
        }
        return this;
    }
    
    get(key) {
        if (key === undefined) {
            return database[this.id];
        }
        if (key && typeof key === 'string') {
            if (database[this.id].hasOwnProperty(key)) {
                return database[this.id][key];
            }
        }
        return undefined;
    }
    
    clear(del) {
        if (del) {
            delete database[this.id];
            delete localStorage[this.id];
        } else {
            database[this.id] = {};
            localStorage[this.id] = '{}';
        }
        return null;
    }
}

this.module.exports = data.Storage;
