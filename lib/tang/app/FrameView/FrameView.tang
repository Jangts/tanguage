/*!
 * tanguage framework source code
 *
 * class app.FrameView,
 *
 * Date: 2017-04-06
 */
;
tang.init().block([
    '$_/util/',
    '$_/dom/'
], function(pandora, root, imports, undefined) {
    var _ = pandora,
        declare = pandora.declareClass,

        doc = root.document,
        location = root.location,
        infinity = root.Number.POSITIVE_INFINITY,
        $ = _.dom.$;

    _('see');

    var initScrollTop = $(doc.body).scrollTop(),
        handlers = {};

    declare('app.FrameView', {
        state: false,
        HTMLElement: null,
        frame: null,
        histories: null,
        nextIndex: 0,
        _init(elem) {
            this.HTMLElement = _.util.isStr(elem) ? _.dom.selector.byId(elem) : elem;
            this.frame = _.dom.create('iframe', this.HTMLElement, {
                width: '100%',
                height: '100%'
            });
            this.histories = [];
        },
        on() {
            this.state = true;
            _.dom.setAttr(this.HTMLElement, 'state', 'on');
            return this;
        },
        off() {
            this.state = false;
            _.dom.setAttr(this.HTMLElement, 'state', 'off');
            return this;
        },
        load(url, isnew) {
            this.on().frame.src = url;
            if (isnew === true) {
                this.histories.length = this.nextIndex;
                this.histories.push(url);
                this.nextIndex = this.histories.length;
            }
            var that = this;
            this.frame.onload = function() {
                console.log(this.location);
                that.onload(this);
            }
            this.frame.onload.onhashchange = function() {
                console.log(this, that.frame.location, that.frame.location.hash);
            }
            _.dom.setStyle(this.HTMLElement, { overflowY: 'hidden' }).setStyle(this.frame, {
                height: '100%',
                overflow: 'auto'
            });
            return this;
        },
        onload(frame) {
            _.dom.setStyle(this.HTMLElement, { overflowY: 'hidden' }).setStyle(this, {
                height: '100%',
                overflow: 'auto'
            });
            try {
                var frameSize = _.dom.getSize(frame.contentWindow.document.body);
            } catch (error) {
                frame.scrolling = 'auto';
                return;
            }
            _.dom.setStyle(frame, {
                height: frameSize.height,
                overflow: 'hidden'
            });
            _.dom.setStyle(this.HTMLElement, { overflowY: 'auto' });
        },
        refresh() {
            return this.load(this.histories[this.nextIndex - 1]);
        },
        loadPrev() {
            if (this.nextIndex > 1) {
                this.nextIndex--;
                this.request(this.histories[this.nextIndex - 1])
            }
            return this;
        },
        loadNext() {
            if (this.nextIndex < this.histories.length) {
                this.nextIndex++;
                this.request(this.histories[this.nextIndex - 1])
            }
            return this;
        },
        loadText(html) {
            this.launch().frame.srcdoc = html;
            return this;
        },
        resize() {
            return this;
        }
    });
});