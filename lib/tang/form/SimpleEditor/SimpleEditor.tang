@module;

/*!
 * tanguage framework source code
 *
 * class forms/SimpleEditor
 * 
 * Date: 2015-09-04
 */

use $ util/bool;
use $ util/Color;
use $ dom/;
use $ dom/HTMLCloser;
use $ see/fa.css;
use ~style.css;
use ~../Selection;;

var _ = pandora,
doc = root.document,
console = root.console,
query = _.dom.sizzle || _.dom.selector;

namespace form {
    var SimpleEditors = {};
    var conmands = {};
    // var metheds = {};
    var creators = {};
    var dialogs = {};
    @include 'includes/parameters';
    @include 'includes/builders';
    // log builders;
    @include 'includes/checks';
    @include 'includes/events';

    @include 'includes/declare';

    @include 'includes/commands/base.cmds';
    @include 'includes/commands/font.cmds';
    @include 'includes/commands/header.cmds';
    @include 'includes/commands/createlink.cmd';
    @include 'includes/commands/insert.cmds';
    @include 'includes/commands/inserttable.cmd';
    @include 'includes/commands/insertfile.cmd';
    @include 'includes/commands/insertimage.cmd';
    @include 'includes/commands/insertvideo.cmd';
    @include 'includes/commands/insertfragments.cmd';

    @include 'includes/commands/insertemoticon.cmd';
    public careatEditor = (elem, options) {
        return new _.form.SimpleEditor(elem, options);
    },
    careatEditors = (selector, options) {
        var editors = [];
        each(query(selector) as i, el) {
            editors.push(_.form.careatEditor(el, options));
        }
        return editors;
    },
    getEditorById = (id) {
        return id && SimpleEditors[id];
    };
}