use$ str/
# use ./foo/bar.js?v=1&time=1234567898765;

@var console
@var location;
@var history,
alert,confirm,
prompt;

alert(){}
confirm = (){}
alert('Hello, world!');
confirm('foo, or bar?');

{
    let console = null;
    let document = null;
    // let location;
}
console.log(typeof document);
document = null;
// let location = null;

namespace foo.bar;
const A = 0;
var a = 0;
# let a = 0;
let b = 0;
{
    const A = 0;
    # A = 1;
    let a = 1
    let b = 1
    public p1 = 14;
    let pandora = null;
    let pandora_0;
    let pandora_1 = b;
    var pandora_1_1;
    var root = pandora;
    clog a, b;

    let z = 1;
    {
        let a = 1
        let b = 1
        let z = 1;
    }
}

{
    let z = 1;
}

clog a, b, pandora_1_1, /* pandora_1 */;

var c = 0
var i = 0;
for (let i=0; i < 5; i++) { 
    var a = i;
    let c = i;
    var e = i;
    let f = 2;
    var pandora_0;
    let pandora_0_0;
    public p2 = 21;
    let g = 2;
    let z = 2;
    for (let i=0; i <6 ; i++) { 
        # clog i;
    }
    var j_5 = 5;
    for (let j=0; j <6 ; j++) { 
        # clog j;
    }
    for (var j=0; j <6 ; j++) { 
        # clog j;
    }
}
let z_0;
clog /* z */;

var d = [0,1,3,4,5]
each (d as index, item) {
    # let index = 0;
    var d = index;
    var c = item;
    var f = 2;
    public p0 = 28;
    clog this, arguments;
    var fn = ()=>{
        clog this, arguments;
    }
}

g (arg1){
    public p4 = 35;
    root.console.log(this);
}
g(1);
# clog _arguments;
var g2 = (arg1, ...args)=> {
    var args2 = Array.prototype.slice.call(arguments, 2);

    clog arguments
    public p4 = 35;
    let _this = 1;
    clog this;
    let _this_9 = 9;
    # clog _arguments;
}
g2(1);

var g3 = (arg1, ...args)-> {
    public p4 = 35;
    let _this = 1;
    clog this;
    let _this_9 = 9;
    # clog _arguments;
}
g3(1);

public f(a = 4, b, c, ...d){
    each (d as index, item) {
        # let index = 0;
        var d = index;
        var c = item;
        var f = 2;
        public p0 = 28;
        clog this, arguments;
    }
    var pandora = (){ clog true};
    var f1 = ()->{ clog this, arguments;};
    var f2 = ()=>{ clog this, arguments;};
    var pandora_0 = {};
    var root = pandora;
    # var let = void 0;
}
f(3,4,5,6,7,8,9)

public p0 = 7;

var pandora = (){ clog true};
var pandora_0 = {};
var root = pandora;
# var let = void 0;

pandora();
clog a, b, c, d, e;

public root;

namespace bla {
    var pandora = (){
        clog true;
        public  test = 3;
    };
    var pandora_0 = {};
    var root = pandora;

    public a = 0;
    let b = 0;
    {
        let a = 1
        let b = 1
        public p1 = 14;
        public pandora = null;
        let root = pandora;
        clog a, b;

        let z = 1;
        {
            let a = 1
            let b = 1
            let z = 1;
            public y = 25;
        }
    }

    public fnbla(){
        clog pandora;
    }
    public root;
    
}